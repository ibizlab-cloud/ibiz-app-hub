$mpicker: (
  'empty-bg-color': getCssVar(color, bg, 3),
);

/* mpicker 地址栏 */
@include b('mpicker') {
  @include set-component-css-var('mpicker', $mpicker);
  @include flex;

  input::placeholder {
    color: getCssVar('form-item', 'placeholder-color');
  }

  .el-input.is-disabled .el-input__inner {
    color: getCssVar('form-item', 'disabled-color');
    border-color: getCssVar('form-item', 'disabled-border-color');
  }

  .el-select {
    width: 100%;
  }

  ion-icon {
    font-size: getCssVar(form-item, font-size);
    cursor: pointer;
  }

  @include e('buns-position') {
    position: absolute;
    right: 26px;
    z-index: 1;
    display: inline-block;
    width: 30px;
    height: 100%;
    cursor: pointer;
  }

  @include e('btns') {
    position: absolute;
    right: 0;
    width: 100%;
    height: 100%;
    color: getCssVar('form-item', 'placeholder-color');
    cursor: pointer;
    @include flex(row, center, center);
  }

  @include m(disabled) {
    ion-icon {
      pointer-events: none;
    }
  }

  @include m(readonly) {
    font-size: getCssVar(form-item, font-size);
    line-height: getCssVar(editor, default, line-height);
    color: getCssVar(form-item, readonly-color);
  }

  @include e(action-item) {
    color: getCssVar(color, link);
    text-align: center;
  }

  @include e(empty) {
    padding: 0;
    #{getCssVarName(no-data, min-height)}: 100px;

    --el-empty-image-width: 100px;
  }

  @include e(transfer) {
    @include set-component-css-var('mpicker', $mpicker);
    @include when(empty) {
      .el-select-dropdown__item {
        height: auto;
        padding: 0;
      }
      .#{bem(no-data)} {
        background-color: getCssVar(mpicker, empty-bg-color);
      }
    }
  }
}


// 表单下的编辑器默认显示，悬浮上去显示编辑器
@include b(mpicker-form-default-content){
  display: none;
}

@include b(form-item){

  @include b(mpicker) {
    @include when(show-default){
      // 悬浮显示编辑器
      &:hover{
        @include b(mpicker-form-default-content){
          display: none;
        }     
        @include b(mpicker-select){
          display: block;    
        }       
      }    
      
      // 不悬浮时显示信息态
      @include b(mpicker-form-default-content){      
        display: flex;
        align-items: center;
        width: 100%;     
        height: getCssVar(editor, default, line-height);
        padding: getCssVar(form-item, hover-edit-padding);        
        font-family: Arial, sans-serif;;      
        font-size: getCssVar(form-item, font-size);
        line-height: getCssVar(editor, default, line-height);
        color: getCssVar(form-item, text-color);
        @include b(mpicker-content-item){
          height: calc(getCssVar(editor, default, line-height) - getCssVar('spacing', 'tight'));
          padding: 0 getCssVar('spacing', 'tight');
          margin: 2px 6px 2px 0;
          font-size: getCssVar(font-size, small);
          line-height: calc(getCssVar(editor, default, line-height) - getCssVar('spacing', 'tight'));;
          color: getCssVar(editor, default, text-color);
          background-color: getCssVar(color, fill-0);
          border: 1px solid transparent;
          border-radius: getCssVar(border-radius, small);
        }
      }
      @include b(mpicker-select){
        display: none;  
      }
      
      // 输入态
      @include when(editable){
        @include b(mpicker-form-default-content){
          display: none;
        }     
        @include b(mpicker-select){
          display: block;    
        }  
      }
    }

  }
}